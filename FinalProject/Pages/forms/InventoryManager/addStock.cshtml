@page
@model FinalProject.Pages.forms.InventoryManager.addStockModel
@{
	Layout = "/Pages/Shared/_LayoutForInventoryManager.cshtml";
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap JavaScript (optional, if you want to use Bootstrap components that require JavaScript) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

}

<div class="container">
    <h1 class="mb-4">Add Stock</h1>
    <form method="post" asp-page-handler="AddItem">
        <div class="mb-3">
            <div id="errorMessageContainer"></div>
            <label for="arrivalDate" class="form-label"><strong>Stock Arrival Date</strong></label>
            <input type="date" class="form-control" id="arrivalDate" asp-for="item.ArrivalDate">
        </div>
        <hr>
        <div class="row mb-3">
            <div class="col">
                <label for="itemName" class="form-label">Item Name</label>
                <input type="text" class="form-control" id="itemName" asp-for="item.ItemName">
            </div>
            <div class="col-md-6">
                <label for="salesPrice" class="form-label">Sales Price</label>
                <input type="number" class="form-control" id="salesPrice" asp-for="item.SalePrice">
            </div>
        </div>
        <div class="row mb-3">
            <div class="col">
                <label for="description" class="form-label">Description</label>
                <textarea class="form-control" id="description" asp-for="item.Description"></textarea>
            </div>

            <div class="col-md-6">
                <label for="measurementUnit" class="form-label">Measurement Unit</label>
                <input type="text" class="form-control" id="measurementUnit" asp-for="item.MeasurementUnit">
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="costPrice" class="form-label">Cost Price</label>
                <input type="number" class="form-control" id="costPrice" asp-for="item.CostPrice">
            </div>
            <div class="col-md-6">
                <label for="quantity" class="form-label">Quantity</label>
                <input type="number" class="form-control" id="quantity" asp-for="item.CurrentQuantity">
            </div>
        </div>
        <div class="row">
            <div class="col">
                <button type="button" class="btn btn-secondary mt-3" onclick="resetForm()">Cancel</button>
                <button type="submit" class="btn btn-primary mt-3">Save</button>
                @if (ModelState.IsValid)
                {
                    <script>
                        // Call the resetForm() function if the ModelState is not valid
                        resetForm();
                    </script>
                }
            </div>
        </div>
    </form>


    <hr>

    <form method="post" asp-page-handler="AddStock" id="addStockForm">
        <!-- Table to display added items -->
        <h2 class="mb-3">Added Items</h2>
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Description</th>
                        <th>Sales Price</th>
                        <th>Measurement Unit</th>
                        <th>Cost Price</th>
                        <th>Quantity</th>
                        <th>Action</th>
                    
                        </tr>
                </thead>
                <tbody id="addedItemsTableBody">
                        @foreach (var item in addStockModel.items)
                        {
                            <tr>
                                <td>@item.ItemName</td>
                                <td>@item.Description</td>
                                <td>@item.SalePrice</td>
                                <td>@item.MeasurementUnit</td>
                                <td>@item.CostPrice</td>
                                <td>@item.CurrentQuantity</td>
                            <td>
                                <button type="submit" formmethod="post" asp-page-handler="ItemRemove" asp-route-Name="@item.ItemName" class="btn btn-danger btn-sm">Delete</button>

                            </td>
                            </tr>
                        }

                </tbody>
            </table>
        </div>

        <!-- Button to add stock -->
        <div class="text-center">
            <button type="submit" class="btn btn-primary mt-3">Add Stock</button>
        </div>
    </form>

</div>





<script>

    function resetForm() 
    {
        // Reset all form fields
        document.getElementById("arrivalDate").value = "";
        document.getElementById("itemName").value = "";
        document.getElementById("description").value = "";
        document.getElementById("salesPrice").value = "";
        document.getElementById("measurementUnit").value = "";
        document.getElementById("costPrice").value = "";
        document.getElementById("quantity").value = "";
    }

    function saveItem() {
        // Get form values
        var itemName = document.getElementById("itemName").value;
        var description = document.getElementById("description").value;
        var salesPrice = document.getElementById("salesPrice").value;
        var measurementUnit = document.getElementById("measurementUnit").value;
        var costPrice = document.getElementById("costPrice").value;
        var quantity = document.getElementById("quantity").value;

            // Display Bootstrap alert
            var errorMessage = document.createElement("div");
            errorMessage.className = "alert alert-danger";
            errorMessage.innerHTML = "Fill all text boxes!";
            document.getElementById("errorMessageContainer").appendChild(errorMessage);
            return;
        

        // Create new table row
        var newRow = document.createElement("tr");
        newRow.innerHTML = "<td>" + itemName + "</td><td>" + description + "</td><td>" + salesPrice + "</td><td>" + measurementUnit + "</td><td>" + costPrice + "</td><td>" + quantity + "</td>";

        // Append the new row to the table body
        document.getElementById("addedItemsTableBody").appendChild(newRow);

        // Reset the form
        resetForm();
    }

</script>

